/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package racecondition;

public class App {
    public static void main(String[] args) throws InterruptedException {
        BankAccount ba1 = new BankAccount(100);
        Thread t1 = new Thread(() -> {
            for (int i = 0; i < 1000; i++) {
                ba1.deposit(100);
            }
        });

        Thread t2 = new Thread(() -> {
            for (int i = 0; i < 1000; i++) {
                ba1.withdraw(100);
            }
        });

        t1.start();
        t2.start();

        t1.join();
        t2.join();

        System.out.println("Condition race result: " + ba1);
        
        BankAccount ba2 = new BankAccount(100);
        Thread t3 = new Thread(() -> {
            depositLoop(ba2);
        });

        Thread t4 = new Thread(() -> {
            withdrawLoop(ba2);
        });

        t3.start();
        t4.start();

        t3.join();
        t4.join();
        
        System.out.println("Result without condition race: " + ba2);
    }
    
    public static synchronized void depositLoop(BankAccount ba) {
        for (int i = 0; i < 1000; i++) {
            ba.deposit(100);
        }
    }
    
    public static synchronized void withdrawLoop(BankAccount ba) {
        for (int i = 0; i < 1000; i++) {
            ba.withdraw(100);
        }
    }
}
