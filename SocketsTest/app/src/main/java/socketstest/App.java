/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package socketstest;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.*;

public class App {

	public static void main(String[] args) {
		serverListener(8888,200);
	}
	
	public static void serverListener(int port,int buffer) {
		try {
			byte[] message = new byte[buffer];
			String answer = "";
			String smessage = "";
			String[] words;

			ServerSocket servSock = new ServerSocket(port);
			Socket socket = servSock.accept();
			InputStream is = socket.getInputStream();
			OutputStream os = socket.getOutputStream();
			while (true) {
				// read
				smessage = "";
				answer = "";
				is.read(message);
				for (byte b : message) {
					if (b != 0) {
						smessage += (char) b;
					}
				}
				System.out.println(smessage);
				switch(smessage.strip()) {
					case "":
						break;
					case "sayhello":
						answer = "Hello user";
						break;
					case "exit":
						answer = "Shutdown";
						System.exit(0);
						break;
					default:
						int res = 0;
						String backStr = "";
						words = smessage.split(" ");
						for(String word:words) {
							switch(word) {
								case "+":
									backStr = "+";
									break;
								case "-":
									backStr = "-";
									break;
								default:
									if(backStr.equals("")) {
										res = Integer.parseInt(word);
										backStr = word;
									}
									if(backStr.equals("+")) {
										res += Integer.parseInt(word);
										backStr = word;
									}
									if(backStr.equals("-")) {
										res -= Integer.parseInt(word);
										backStr = word;
									}
									break;
							}
						}
						answer = "Answer "+Integer.toString(res);
				}
				for (int i = 0; i < message.length; i++) {
					message[i] = 0;
				}
				// write
				System.out.println(answer);
				for (char c : (answer).toCharArray()) {
					if (c != 0) {
						os.write(c);
					}
				}
				os.write('\n');
				os.flush();
				smessage = "";
				// sleep
				try {
					Thread.currentThread().sleep(1000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

		} catch (IOException ioe) {
			System.out.println("Ohh no, IOException");
		}
	}

}