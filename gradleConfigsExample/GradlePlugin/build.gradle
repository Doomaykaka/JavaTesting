/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.1/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Plugin version and group id
version = '1.0.0'
group = 'doomaykacheckstylecriticplugin'

dependencies {  
    implementation "org.eclipse.persistence:org.eclipse.persistence.moxy:3.0.0"
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'
    
    // Use JUnit Jupiter for testing.
    implementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

gradlePlugin {
	// Plugin sources
	website = 'https://github.com/Doomaykaka/DoomaykaCheckStyleCriticPlugin'
  	vcsUrl = 'https://github.com/Doomaykaka/DoomaykaCheckStyleCriticPlugin'
    // Define the plugin
    plugins {
        parseReport {
            id = 'doomaykacheckstylecriticplugin.parseReport'
            group = 'doomaykacheckstylecriticplugin.parseReport'
            implementationClass = 'doomaykacheckstylecriticplugin.DoomaykaCheckStyleCriticPluginPlugin'
        	version = "1.0.0"
        	displayName = 'CheckStyle critic plugin'
        	description = 'CheckStyle critic plugin'
        	tags.set(['lint', 'style', 'jylint'])
        	//name == parseReport
        }  
    }      
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
